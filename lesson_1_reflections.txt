How did viewing a diff between two versions of a file help you see the bug that 
was introduced?



    It really pinpointed the issue and narrowed the focus of the search. This is as opposed to scanning
	 everything visually for the problems.



How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?



    It could help me find mistakes or options made at any point and quickly fix them rather than taking
	 time to hunt for them.



What do you think are the pros and cons of manually choosing when to create a
 commit, like you do in Git,
 vs having versions automatically saved, like Google
docs does?



    Manually committing has the "pro" of sensible delineations and explainations for the commit. It has the "con"
	 of possible user error.



Why do you think some version control systems, like Git, allow saving multiple
files in one commit,
 while others, like Google Docs, treat each file separately?



    Because when coding, sometimes there are files that are interrelated.



How can you use the commands git log and git diff to view the history of files?



    Git log will list all versions of the code. Use git diff to compare two versions of the code.



How might using version control make you more confident to make changes that 
could break something?



    if I change something that breaks the code, there is a time-reasonable method for finding the problem and
	fixing it. Eliminates the need for visual scanning and trial and error. 



Now that you have your workspace set up, what do you want to try using Git for?



    All coding that has any size to it at all