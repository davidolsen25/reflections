What happens when you initialize a file repository? Why do you need to do it?

	You create a place in memory to record commits. You need to do it because all git functions operate	on this file.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is a medium between the working directory and the repository? It's value is organizational.
	It offers one the chance to see what you are doing and act upon it before you actually "commit"to it.

How can you use the staging area to make sure you have one commit per logical change?

	By using "git diff" to check the difference between the working directory and the staging area. Also, by using "git diff --staged" to check the diff between the staging area and the Head commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If I wanted to keep track of different versions of the code such as an experimental version or one in italian. Git branches could help to keep track of variations without changing the master branch.

How do the diagrams help you visualize the branch structure?

	Diagrams help visualize the branch structure by showing the forks in the road.  The pathways back to an intersection as well as the pathways forward to a merge.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The code of the two branches is combined into one branch with interwoven commits sorted by timestamp. We use git show to see a commit's parent entry. We represent the merge as an onramp to the final branch name in the diagram.

